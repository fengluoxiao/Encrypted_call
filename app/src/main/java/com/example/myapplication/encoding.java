package com.example.myapplication;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import android.content.ClipboardManager;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.os.Bundle;import android.util.Base64;import android.util.Log;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.view.WindowManager;import android.widget.EditText;import android.widget.TextView;import android.widget.Toast;import com.google.android.material.button.MaterialButton;import com.zackratos.ultimatebarx.ultimatebarx.java.UltimateBarX;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import okhttp3.OkHttpClient;import okhttp3.Request;import okhttp3.Response;public class encoding extends AppCompatActivity implements View.OnClickListener{    EditText editText;    MaterialButton materialButton;    TextView textView,pcode,translate;    Base64 base64;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_encoding);        materialButton = findViewById(R.id.submit);        editText = findViewById(R.id.t);        pcode = findViewById(R.id.pcode);        translate = findViewById(R.id.translate);        Toolbar toolbar = findViewById(R.id.toolbar);        setSupportActionBar(toolbar);        textView = findViewById(R.id.textView);        textView.setTextIsSelectable(true);        pcode.setTextIsSelectable(true);        translate.setTextIsSelectable(true);        if(this.getApplication().getResources().getConfiguration().uiMode == 0x21) {            UltimateBarX.statusBar(this).transparent().light(false).apply();            UltimateBarX.navigationBar(this).transparent().light(false).apply();        } else {            UltimateBarX.statusBar(this).transparent().light(true).apply();            UltimateBarX.navigationBar(this).transparent().light(true).apply();        }        materialButton.setOnClickListener((View.OnClickListener) encoding.this);    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        getMenuInflater().inflate(R.menu.menu,menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        int itemId=item.getItemId();        switch (itemId) {            case R.id.encode:                Intent encode = new Intent(this,encoding.class);                startActivity(encode);                finish();                break;            case R.id.decode :                Intent decode = new Intent(this,decoding.class);                startActivity(decode);                break;            case R.id.settings :                Intent settings = new Intent(this,SettingsActivity.class);                startActivity(settings);                break;        }        return super.onOptionsItemSelected(item);    }    @Override    public void onClick(View view) {        String ogText = editText.getText().toString();        apiKey apiKey = new apiKey();        textView.setText(getText(R.string.ogText)+" "+ogText);        String string = apiKey.getAppid()+ogText+apiKey.getSalt()+apiKey.getKey();        String md5 = stringToMD5.stringToMD5(string);        SharedPreferences sp = getSharedPreferences("com.example.myapplication_preferences", Context.MODE_PRIVATE);        boolean status = sp.getBoolean("translate", Boolean.parseBoolean(""));        String objT = sp.getString("translate_list","");        Context context = this;        if(status == true && objT != "") {            String url = "http://api.fanyi.baidu.com/api/trans/vip/translate?q="+ogText+"&from=auto&to="+objT+"&appid="+apiKey.getAppid()+"&salt="+apiKey.getSalt()+"&sign="+md5;            sendRequestWithOKHttp2(url);        } else {            String pbase =  base64.encodeToString(ogText.getBytes(),Base64.DEFAULT);            if (objT == "") {                translate.setText("");                pcode.setText("");            }            translate.setText(getText(R.string.encode_atfer)+" "+pbase);            translate.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View view) {                    ClipBorader.ClipBorader(context,pbase);                    Toast.makeText(context,getText(R.string.clip_encode),Toast.LENGTH_SHORT).show();                }            });            pcode.setText("");        }    }    public void sendRequestWithOKHttp2(String url) {        new Thread(new Runnable() {            @Override            public void run() {                try {                    OkHttpClient client = new OkHttpClient();                    Request request = new Request.Builder().url(url).build();                    Response response = client.newCall(request).execute();                    String responseData = response.body().string();                    parseJsonWithGson(responseData);                } catch (Exception e) {                    e.printStackTrace();                }            }        }).start();    }    public void parseJsonWithGson(String json) throws JSONException {        try {            JSONObject jsonObject1 = new JSONObject(json);            JSONArray jsonArray = jsonObject1.getJSONArray("trans_result");            JSONObject jsonObject = (JSONObject) jsonArray.get(0);            String name = jsonObject.getString("dst");            showResponse(name);        } catch (Exception e) {            e.printStackTrace();        }    }    public  void showResponse(String name) {        Context context = this;        runOnUiThread(new Runnable() {            @Override            public void run() {                SharedPreferences sp = getSharedPreferences("com.example.myapplication_preferences", Context.MODE_PRIVATE);                boolean status = sp.getBoolean("translate", Boolean.parseBoolean(""));                String objT = sp.getString("translate_list","");                if(status == true) {                    String pbase =  base64.encodeToString(name.getBytes(),Base64.DEFAULT);                    translate.setText(getText(R.string.translate_after)+" "+name);                    pcode.setText("");                    pcode.setText(getText(R.string.encode_atfer)+" "+pbase);                   pcode.setOnClickListener(new View.OnClickListener() {                       @Override                       public void onClick(View view) {                           ClipBorader.ClipBorader(context,pbase);                           Toast.makeText(context,getText(R.string.clip_encode),Toast.LENGTH_SHORT).show();                       }                   });                }            }        });    }}